<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <!-- 使用spring组件扫描@service  -->
    <context:component-scan base-package="com.kayimai"/>
    <!-- 自定义域realm -->
    <bean id="custom_Realm" class="com.kayimai.common.realm.LoginRealm"></bean>
        <!-- 缓存管理 -->  
    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"></bean>  
    <!-- 安全管理器  ref对象-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="custom_Realm"/>
    </bean>
    
    
    	<!-- Shiro权限过滤过滤器定义 -->
	<bean name="shiroFilterChainDefinitions" class="java.lang.String">
		<constructor-arg>
			<value>
                /static/** = anon
                /WEB-INF/pages/** = anon
                /user/loginhome = anon
				<!-- /admin/login = authc
				/admin/logout = logout -->
				/user/** = user
				<!-- /** = authc 所有url都必须认证通过才可以访问  -->
                /* = authc
			</value>
		</constructor-arg>
	</bean>
    
    
    <!-- shiro filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 安全管理器必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 身份认证失败   认证提交的地址 -->
        <!-- <property name="loginUrl" value="/security/login.jsp"/> -->
        <property name="loginUrl" value="/user/loginhome"/> 
        <!-- Shiro连接约束配置,即过滤链的定义 -->
       	<property name="filterChainDefinitions">
			<ref bean="shiroFilterChainDefinitions"/>
		</property>
    </bean>
    <!-- Shiro生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>